{"version":3,"sources":["assets/icons/logo.js","components/navbar.js","utils/github.js","pages/home.js","pages/notFound.js","pages/privacy.js","pages/report.js","App.js","serviceWorker.js","index.js"],"names":["Logo","color","size","xmlns","viewBox","width","height","stroke","cx","cy","r","fill","strokeWidth","strokeLinecap","strokeLinejoin","d","transform","paintOrder","style","whiteSpace","x","y","fontFamily","fontSize","fontWeight","Navbar","theme","useTheme","mode","useColorMode","history","useHistory","Flex","position","zIndex","top","left","right","className","bg","colorMode","flexDir","justify","align","p","Box","cursor","onClick","push","colors","white","black","Stack","isInline","spacing","IconButton","as","RouterLink","to","aria-label","title","icon","Flag","Link","href","target","isExternal","GitHub","Sun","Moon","toggleColorMode","getRepos","a","fetch","then","res","json","repos","name","package","Home","useState","apps","setApps","toast","useToast","getApps","useCallback","reps","filter","app","catch","description","status","isClosable","useEffect","flex","pt","minH","px","Text","textAlign","map","extraInfo","find","repo","py","key","Image","src","full_name","w","h","borderRadius","mr","pr","alignItems","Download","html_url","NotFound","counter","setCounter","interval","setInterval","curr","clearInterval","Privacy","pb","overflowX","List","styleType","rel","ReportSchema","Yup","shape","required","email","software","stepsToReproduce","additionalInfo","SelectOption","children","rest","backgroundColor","Report","isSubmitting","setIsSubmitting","location","useLocation","useFormik","initialValues","undefined","onSubmit","values","validationSchema","handleChange","setFieldValue","handleSubmit","errors","touched","search","queryString","URLSearchParams","get","FormControl","isInvalid","isRequired","FormLabel","htmlFor","Input","id","placeholder","onChange","value","autoFocus","FormErrorMessage","Select","Textarea","Button","isLoading","variantColor","type","alignSelf","customTheme","fonts","body","heading","mono","100","200","300","400","500","600","700","800","900","brand","App","ThemeProvider","CSSReset","ColorModeProvider","path","exact","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.656cbe74.chunk.js","sourcesContent":["import React from 'react';\n\nconst Logo = ({color, size}) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 500 500\"\n      width={size || 100}\n      height={size || 100}>\n      <g stroke={color || '#F4F2F7'}>\n        <circle cx=\"250\" cy=\"155.664\" r=\"10.8\" fill=\"none\" strokeWidth=\"13\" />\n        <path\n          fill=\"none\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"20\"\n          d=\"M78.105 144.864L78.105 102.088 421.895 102.088 421.738 144.838\"\n        />\n        <g fill=\"none\" strokeWidth=\"20\">\n          <path\n            d=\"M77.606 47.761c30.091 0 58.403 11.519 85.337 24.937 27.03 13.466 56.967 23.376 86.121 23.418\"\n            transform=\"translate(1.217 97.103)\"\n          />\n          <path\n            d=\"M419.959 47.761c-30.091 0-58.403 11.519-85.337 24.937-27.03 13.466-56.967 23.376-86.121 23.418\"\n            transform=\"translate(1.217 97.103)\"\n          />\n        </g>\n        <path\n          fill=\"none\"\n          strokeLinecap=\"round\"\n          strokeWidth=\"20\"\n          d=\"M78.105 144.864c-.718 355.136 343.072 355.136 343.79 0\"\n          paintOrder=\"fill\"\n        />\n        <text\n          style={{whiteSpace: 'pre'}}\n          x=\"184.919\"\n          y=\"368.029\"\n          fill={color || '#F4F2F7'}\n          fontFamily=\"Roboto\"\n          fontSize=\"200\"\n          fontWeight=\"900\">\n          P\n        </text>\n      </g>\n    </svg>\n  );\n};\n\nexport default Logo;\n","import {\n  Box,\n  Flex,\n  IconButton,\n  Link,\n  Stack,\n  useColorMode,\n  useTheme,\n} from '@chakra-ui/core';\nimport React from 'react';\nimport {Flag, GitHub, Moon, Sun} from 'react-feather';\nimport {Link as RouterLink, useHistory} from 'react-router-dom';\nimport Logo from '../assets/icons/logo';\n\nconst Navbar = () => {\n  const theme = useTheme();\n  const mode = useColorMode();\n  const history = useHistory();\n\n  return (\n    <Flex\n      position={'fixed'}\n      zIndex={1}\n      top={0}\n      left={0}\n      right={0}\n      className={'navbar-shadow'}\n      bg={mode.colorMode === 'dark' ? 'black.500' : 'white.500'}\n      flexDir={['column', 'row']}\n      justify={'space-between'}\n      align={'center'}\n      p={30}>\n      <Box cursor={'pointer'} onClick={() => history.push('/')}>\n        <Logo\n          size={50}\n          color={\n            mode.colorMode === 'dark'\n              ? theme.colors.white['500']\n              : theme.colors.black['500']\n          }\n        />\n      </Box>\n\n      <Stack isInline spacing={3}>\n        <IconButton\n          as={RouterLink}\n          to={'/report'}\n          aria-label={'Report a bug'}\n          title={'Report a bug'}\n          bg={mode.colorMode === 'dark' ? 'black.500' : 'white.500'}\n          color={mode.colorMode === 'dark' ? 'white.500' : 'black.500'}\n          icon={Flag}>\n          {null}\n        </IconButton>\n        <IconButton\n          as={Link}\n          href={'https://github.com/pocket-software'}\n          target={'_blank'}\n          isExternal\n          aria-label={'Pocket Software GitHub'}\n          title={'Pocket Software GitHub'}\n          bg={mode.colorMode === 'dark' ? 'black.500' : 'white.500'}\n          color={mode.colorMode === 'dark' ? 'white.500' : 'black.500'}\n          icon={GitHub}>\n          {null}\n        </IconButton>\n        <IconButton\n          aria-label={'Toggle color mode'}\n          title={'Toggle color mode'}\n          bg={mode.colorMode === 'dark' ? 'black.500' : 'white.500'}\n          color={mode.colorMode === 'dark' ? 'white.500' : 'black.500'}\n          icon={mode.colorMode === 'dark' ? Sun : Moon}\n          onClick={mode.toggleColorMode}>\n          {null}\n        </IconButton>\n      </Stack>\n    </Flex>\n  );\n};\n\nexport default Navbar;\n","const ORG = 'pocket-software';\n\nexport const getRepos = async () => {\n  return fetch(`https://api.github.com/orgs/${ORG}/repos`).then((res) =>\n    res.json(),\n  );\n};\n","import {\n  Flex,\n  IconButton,\n  Image,\n  Link,\n  Stack,\n  Text,\n  useColorMode,\n  useToast,\n} from '@chakra-ui/core';\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {Download, GitHub} from 'react-feather';\nimport {getRepos} from '../utils/github';\n\nconst repos = [\n  {\n    name: 'calculator',\n    package: 'software.pocket.calculator',\n  },\n];\n\nconst Home = () => {\n  const [apps, setApps] = useState([]);\n  const toast = useToast();\n  const mode = useColorMode();\n\n  const getApps = useCallback(() => {\n    getRepos()\n      .then((reps) =>\n        setApps(reps.filter((app) => app.name !== 'pocket.software')),\n      )\n      .catch(() => {\n        toast({\n          title: 'Error Loading Projects',\n          description:\n            'There was an error while loading the projects. Please click the flag at the top of the screen to report this issue. Thank you.',\n          status: 'error',\n          position: 'bottom-right',\n          isClosable: true,\n        });\n      });\n  }, [toast]);\n\n  useEffect(() => {\n    getApps();\n  }, [getApps]);\n\n  return (\n    <Stack bg={mode.colorMode === 'dark' ? 'black.500' : 'white.500'} flex={1}>\n      <Flex\n        pt={[200, 125, 100, 100]}\n        minH={'50vh'}\n        align={'center'}\n        justify={'center'}\n        px={15}>\n        <Text\n          color={mode.colorMode === 'dark' ? 'white.500' : 'black.500'}\n          fontWeight={'bold'}\n          fontSize={60}\n          textAlign={'center'}>\n          simple apps for your back pocket\n        </Text>\n      </Flex>\n      {apps.map((app) => {\n        const extraInfo = repos.find((repo) => repo.name === app.name);\n        return (\n          <Flex align={'center'} py={15} px={15} key={app.name}>\n            <Image\n              bg={mode.colorMode === 'dark' ? 'white.500' : 'black.500'}\n              p={15}\n              src={`https://raw.githubusercontent.com/${\n                app.full_name\n              }/main/src/assets/images/${\n                mode.colorMode === 'dark' ? 'light' : 'dark'\n              }_logo_transparent.png`}\n              w={100}\n              h={100}\n              borderRadius={15}\n              mr={15}\n            />\n            <Stack spacing={1}>\n              <Text\n                pr={2}\n                alignItems={'center'}\n                color={mode.colorMode === 'dark' ? 'white.500' : 'black.500'}\n                fontWeight={'bold'}\n                fontSize={25}>\n                {app.name}\n              </Text>\n              <Text\n                color={mode.colorMode === 'dark' ? 'white.500' : 'black.500'}>\n                {app.description}\n              </Text>\n              <Stack isInline>\n                <IconButton\n                  as={Link}\n                  href={`https://play.google.com/store/apps/details?id=${extraInfo.package}`}\n                  target={'_blank'}\n                  isExternal\n                  aria-label={`Get ${app.name} on Google Play`}\n                  title={`Get ${app.name} on Google Play`}\n                  bg={mode.colorMode === 'dark' ? 'black.500' : 'white.500'}\n                  color={mode.colorMode === 'dark' ? 'white.500' : 'black.500'}\n                  icon={Download}>\n                  {null}\n                </IconButton>\n                <IconButton\n                  as={Link}\n                  href={app.html_url}\n                  target={'_blank'}\n                  isExternal\n                  aria-label={`${app.name} GitHub`}\n                  title={`${app.name} GitHub`}\n                  bg={mode.colorMode === 'dark' ? 'black.500' : 'white.500'}\n                  color={mode.colorMode === 'dark' ? 'white.500' : 'black.500'}\n                  icon={GitHub}>\n                  {null}\n                </IconButton>\n              </Stack>\n            </Stack>\n          </Flex>\n        );\n      })}\n    </Stack>\n  );\n};\n\nexport default Home;\n","import {Flex, Stack, Text, useColorMode} from '@chakra-ui/core';\nimport React, {useEffect, useState} from 'react';\nimport {useHistory} from 'react-router';\n\nconst NotFound = () => {\n  const [counter, setCounter] = useState(5);\n  const mode = useColorMode();\n  const history = useHistory();\n\n  useEffect(() => {\n    const interval = setInterval(\n      () =>\n        setCounter((curr) => {\n          if (curr - 1 === 0) {\n            history.push('/');\n          }\n          return curr - 1;\n        }),\n      1000,\n    );\n    return () => clearInterval(interval);\n  }, [history]);\n\n  return (\n    <Stack bg={mode.colorMode === 'dark' ? 'black.500' : 'white.500'} flex={1}>\n      <Flex\n        pt={[125, 100, 100]}\n        minH={'50vh'}\n        flexDir={'column'}\n        align={'center'}\n        justify={'center'}\n        px={15}\n        flex={1}>\n        <Text\n          color={mode.colorMode === 'dark' ? 'white.500' : 'black.500'}\n          fontWeight={'bold'}\n          fontSize={[40, 60]}\n          textAlign={'center'}>\n          404 | couldn't find that\n        </Text>\n        <Text\n          color={mode.colorMode === 'dark' ? 'white.500' : 'black.500'}\n          fontWeight={'bold'}\n          fontSize={[20]}\n          textAlign={'center'}>\n          Redirecting you in {counter} seconds...\n        </Text>\n      </Flex>\n    </Stack>\n  );\n};\n\nexport default NotFound;\n","import {\n  Flex,\n  Link,\n  List,\n  ListItem,\n  Stack,\n  Text,\n  useColorMode,\n} from '@chakra-ui/core';\nimport React from 'react';\n\nconst Privacy = () => {\n  const mode = useColorMode();\n\n  return (\n    <Flex\n      flexDir={'column'}\n      bg={mode.colorMode === 'dark' ? 'black.500' : 'white.500'}\n      flex={1}\n      pt={[175, 150, 150]}\n      pb={[50]}\n      align={'center'}\n      overflowX={'hidden'}>\n      <Stack\n        spacing={4}\n        as={Flex}\n        flexDir={'column'}\n        className={'navbar-shadow'}\n        bg={mode.colorMode === 'dark' ? 'black.500' : 'white.500'}\n        w={['90%', '90%', '75%', '50%']}\n        borderRadius={15}\n        p={['25px', '25px', '50px']}\n        color={mode.colorMode === 'dark' ? 'white.500' : 'black.500'}\n        fontFamily={'Roboto'}>\n        <Text fontWeight={'bold'} fontSize={30}>\n          Privacy Policy\n        </Text>\n        <Text>\n          Noah Richardson built the Pocket Software app as an Open Source app.\n          This SERVICE is provided by Noah Richardson at no cost and is intended\n          for use as is.\n        </Text>\n        <Text>\n          This page is used to inform visitors regarding my policies with the\n          collection, use, and disclosure of Personal Information if anyone\n          decided to use my Service.\n        </Text>\n        <Text>\n          If you choose to use my Service, then you agree to the collection and\n          use of information in relation to this policy. The Personal\n          Information that I collect is used for providing and improving the\n          Service. I will not use or share your information with anyone except\n          as described in this Privacy Policy.\n        </Text>\n        <Text>\n          The terms used in this Privacy Policy have the same meanings as in our\n          Terms and Conditions, which is accessible at Pocket Software unless\n          otherwise defined in this Privacy Policy.\n        </Text>\n        <Text fontWeight={'bold'} fontSize={20}>\n          Information Collection and Use\n        </Text>\n        <Text>\n          For a better experience, while using our Service, I may require you to\n          provide us with certain personally identifiable information. The\n          information that I request will be retained on your device and is not\n          collected by me in any way.\n        </Text>\n        <Text>\n          The app does use third party services that may collect information\n          used to identify you.\n        </Text>\n        <Text>\n          Link to privacy policy of third party service providers used by the\n          app\n        </Text>\n        <List styleType=\"disc\">\n          <ListItem>\n            <Link\n              href=\"https://www.google.com/policies/privacy/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\">\n              Google Play Services\n            </Link>\n          </ListItem>\n        </List>\n        <Text fontWeight={'bold'} fontSize={20}>\n          Log Data\n        </Text>\n        <Text>\n          I want to inform you that whenever you use my Service, in a case of an\n          error in the app I collect data and information (through third party\n          products) on your phone called Log Data. This Log Data may include\n          information such as your device Internet Protocol (“IP”) address,\n          device name, operating system version, the configuration of the app\n          when utilizing my Service, the time and date of your use of the\n          Service, and other statistics.\n        </Text>\n        <Text fontWeight={'bold'} fontSize={20}>\n          Cookies\n        </Text>\n        <Text>\n          Cookies are files with a small amount of data that are commonly used\n          as anonymous unique identifiers. These are sent to your browser from\n          the websites that you visit and are stored on your device's internal\n          memory.\n        </Text>\n        <Text>\n          This Service does not use these “cookies” explicitly. However, the app\n          may use third party code and libraries that use “cookies” to collect\n          information and improve their services. You have the option to either\n          accept or refuse these cookies and know when a cookie is being sent to\n          your device. If you choose to refuse our cookies, you may not be able\n          to use some portions of this Service.\n        </Text>\n        <Text fontWeight={'bold'} fontSize={20}>\n          Service Providers\n        </Text>\n        <Text>\n          I may employ third-party companies and individuals due to the\n          following reasons:\n        </Text>\n        <List styleType=\"disc\">\n          <ListItem>To facilitate our Service;</ListItem>\n          <ListItem>To provide the Service on our behalf;</ListItem>\n          <ListItem>To perform Service-related services; or</ListItem>\n          <ListItem>\n            To assist us in analyzing how our Service is used.\n          </ListItem>\n        </List>\n        <Text>\n          I want to inform users of this Service that these third parties have\n          access to your Personal Information. The reason is to perform the\n          tasks assigned to them on our behalf. However, they are obligated not\n          to disclose or use the information for any other purpose.\n        </Text>\n        <Text fontWeight={'bold'} fontSize={20}>\n          Security\n        </Text>\n        <Text>\n          I value your trust in providing us your Personal Information, thus we\n          are striving to use commercially acceptable means of protecting it.\n          But remember that no method of transmission over the internet, or\n          method of electronic storage is 100% secure and reliable, and I cannot\n          guarantee its absolute security.\n        </Text>\n        <Text fontWeight={'bold'} fontSize={20}>\n          Links to Other Sites\n        </Text>\n        <Text>\n          This Service may contain links to other sites. If you click on a\n          third-party link, you will be directed to that site. Note that these\n          external sites are not operated by me. Therefore, I strongly advise\n          you to review the Privacy Policy of these websites. I have no control\n          over and assume no responsibility for the content, privacy policies,\n          or practices of any third-party sites or services.\n        </Text>\n        <Text fontWeight={'bold'} fontSize={20}>\n          Children’s Privacy\n        </Text>\n        <Text>\n          These Services do not address anyone under the age of 13. I do not\n          knowingly collect personally identifiable information from children\n          under 13. In the case I discover that a child under 13 has provided me\n          with personal information, I immediately delete this from our servers.\n          If you are a parent or guardian and you are aware that your child has\n          provided us with personal information, please contact me so that I\n          will be able to do necessary actions.\n        </Text>\n        <Text fontWeight={'bold'} fontSize={20}>\n          Changes to This Privacy Policy\n        </Text>\n        <Text>\n          I may update our Privacy Policy from time to time. Thus, you are\n          advised to review this page periodically for any changes. I will\n          notify you of any changes by posting the new Privacy Policy on this\n          page.\n        </Text>\n        <Text>This policy is effective as of 2020-10-20</Text>\n        <Text fontWeight={'bold'} fontSize={20}>\n          Contact Us\n        </Text>\n        <Text>\n          If you have any questions or suggestions about my Privacy Policy, do\n          not hesitate to contact me at{' '}\n          <Link href={'mailto:contact@pocket.software'} target={'_blank'}>\n            contact@pocket.software\n          </Link>\n          .\n        </Text>\n      </Stack>\n    </Flex>\n  );\n};\n\nexport default Privacy;\n","import {\n  Button,\n  Flex,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Input,\n  Select,\n  Stack,\n  Text,\n  Textarea,\n  useColorMode,\n} from '@chakra-ui/core';\nimport {useFormik} from 'formik';\nimport React, {useEffect, useState} from 'react';\nimport {useLocation} from 'react-router';\nimport * as Yup from 'yup';\n\nconst ReportSchema = Yup.object().shape({\n  name: Yup.string().required('Required'),\n  email: Yup.string().email('Invalid email').required('Required'),\n  software: Yup.string().required('Required'),\n  description: Yup.string().required('Required'),\n  stepsToReproduce: Yup.string().required('Required'),\n  additionalInfo: Yup.string(),\n});\n\nconst SelectOption = ({children, ...rest}) => {\n  const {colorMode} = useColorMode();\n\n  return (\n    <option\n      style={{\n        backgroundColor: colorMode === 'dark' ? '#181719' : '#f4f2f7',\n      }}\n      {...rest}>\n      {children}\n    </option>\n  );\n};\n\nconst Report = () => {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const mode = useColorMode();\n  const location = useLocation();\n\n  const _submit = (values) => {\n    setIsSubmitting(true);\n\n    // TODO handle form submission\n  };\n\n  const {\n    handleChange,\n    setFieldValue,\n    handleSubmit,\n    values,\n    errors,\n    touched,\n  } = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      software: undefined,\n      description: undefined,\n      stepsToReproduce: '',\n      additionalInfo: '',\n    },\n    onSubmit: _submit,\n    validationSchema: ReportSchema,\n  });\n\n  useEffect(() => {\n    if (location?.search) {\n      const queryString = new URLSearchParams(location.search);\n      if (queryString.get('software')) {\n        setFieldValue('software', queryString.get('software'));\n      }\n    }\n  }, [location, setFieldValue]);\n\n  return (\n    <Flex\n      flexDir={'column'}\n      bg={mode.colorMode === 'dark' ? 'black.500' : 'white.500'}\n      flex={1}\n      pt={[175, 150, 150]}\n      pb={[50]}\n      align={'center'}\n      overflowX={'hidden'}>\n      <Stack\n        spacing={4}\n        as={Flex}\n        flexDir={'column'}\n        className={'navbar-shadow'}\n        bg={mode.colorMode === 'dark' ? 'black.500' : 'white.500'}\n        w={['90%', '90%', '75%', '50%']}\n        borderRadius={15}\n        p={['25px', '25px', '50px']}\n        color={mode.colorMode === 'dark' ? 'white.500' : 'black.500'}\n        fontFamily={'Roboto'}>\n        <Text fontWeight={'bold'} fontSize={30}>\n          Report a bug\n        </Text>\n        <FormControl isInvalid={errors.name && touched.name} isRequired>\n          <FormLabel htmlFor=\"name\">Name</FormLabel>\n          <Input\n            id=\"name\"\n            placeholder=\"Name\"\n            name={'name'}\n            onChange={handleChange}\n            value={values.name}\n            autoFocus\n          />\n          <FormErrorMessage>{errors.name}</FormErrorMessage>\n        </FormControl>\n        <FormControl isInvalid={errors.email && touched.email} isRequired>\n          <FormLabel htmlFor=\"email\">Email</FormLabel>\n          <Input\n            id=\"email\"\n            placeholder=\"Email\"\n            name={'email'}\n            onChange={handleChange}\n            value={values.email}\n          />\n          <FormErrorMessage>{errors.email}</FormErrorMessage>\n        </FormControl>\n        <FormControl isInvalid={errors.software && touched.software} isRequired>\n          <FormLabel htmlFor=\"software\">Software</FormLabel>\n          <Select\n            id=\"software\"\n            name={'software'}\n            onChange={handleChange}\n            value={values.software}\n            bg={mode.colorMode === 'dark' ? 'rgba(255,255,255,0.06)' : '#fff'}>\n            <SelectOption value={'pocket.software'}>\n              pocket.software\n            </SelectOption>\n            <SelectOption value={'calculator'}>calculator</SelectOption>\n          </Select>\n          <FormErrorMessage>{errors.software}</FormErrorMessage>\n        </FormControl>\n        <FormControl\n          isInvalid={errors.description && touched.description}\n          isRequired>\n          <FormLabel htmlFor=\"description\">Description</FormLabel>\n          <Select\n            id=\"description\"\n            name={'description'}\n            onChange={handleChange}\n            value={values.description}\n            bg={mode.colorMode === 'dark' ? 'rgba(255,255,255,0.06)' : '#fff'}>\n            <SelectOption value={'UI bug'}>UI bug</SelectOption>\n            <SelectOption value={'Issue on small/large screen'}>\n              Issue on small/large screen\n            </SelectOption>\n            <SelectOption value={\"I'm getting an error\"}>\n              I'm getting an error\n            </SelectOption>\n            <SelectOption value={'Slow loading times'}>\n              Slow loading times\n            </SelectOption>\n            <SelectOption value={'Other'}>Other</SelectOption>\n          </Select>\n          <FormErrorMessage>{errors.software}</FormErrorMessage>\n        </FormControl>\n        <FormControl\n          isInvalid={errors.stepsToReproduce && touched.stepsToReproduce}\n          isRequired>\n          <FormLabel htmlFor=\"stepsToReproduce\">Steps to Reproduce</FormLabel>\n          <Textarea\n            id=\"stepsToReproduce\"\n            placeholder=\"Steps to reproduce\"\n            name={'stepsToReproduce'}\n            onChange={handleChange}\n            value={values.stepsToReproduce}\n          />\n          <FormErrorMessage>{errors.stepsToReproduce}</FormErrorMessage>\n        </FormControl>\n        <FormControl\n          isInvalid={errors.additionalInfo && touched.additionalInfo}>\n          <FormLabel htmlFor=\"additionalInfo\">Additional Info</FormLabel>\n          <Textarea\n            id=\"additionalInfo\"\n            placeholder=\"Additional info\"\n            name={'additionalInfo'}\n            onChange={handleChange}\n            value={values.additionalInfo}\n          />\n          <FormErrorMessage>{errors.additionalInfo}</FormErrorMessage>\n        </FormControl>\n        <FormControl\n          isInvalid={errors.stepsToReproduce && touched.stepsToReproduce}\n          isRequired>\n          <FormLabel htmlFor=\"stepsToReproduce\">Steps to Reproduce</FormLabel>\n          <Textarea\n            id=\"stepsToReproduce\"\n            placeholder=\"Steps to reproduce\"\n            name={'stepsToReproduce'}\n            onChange={handleChange}\n            value={values.stepsToReproduce}\n          />\n          <FormErrorMessage>{errors.stepsToReproduce}</FormErrorMessage>\n        </FormControl>\n        <FormControl\n          isInvalid={errors.stepsToReproduce && touched.stepsToReproduce}\n          isRequired>\n          <FormLabel htmlFor=\"stepsToReproduce\">Steps to Reproduce</FormLabel>\n          <Textarea\n            id=\"stepsToReproduce\"\n            placeholder=\"Steps to reproduce\"\n            name={'stepsToReproduce'}\n            onChange={handleChange}\n            value={values.stepsToReproduce}\n          />\n          <FormErrorMessage>{errors.stepsToReproduce}</FormErrorMessage>\n        </FormControl>\n        <FormControl\n          isInvalid={errors.stepsToReproduce && touched.stepsToReproduce}\n          isRequired>\n          <FormLabel htmlFor=\"stepsToReproduce\">Steps to Reproduce</FormLabel>\n          <Textarea\n            id=\"stepsToReproduce\"\n            placeholder=\"Steps to reproduce\"\n            name={'stepsToReproduce'}\n            onChange={handleChange}\n            value={values.stepsToReproduce}\n          />\n          <FormErrorMessage>{errors.stepsToReproduce}</FormErrorMessage>\n        </FormControl>\n        <Button\n          isLoading={isSubmitting}\n          variantColor={'brand'}\n          type={'submit'}\n          onClick={handleSubmit}\n          alignSelf={'center'}\n          color={mode.colorMode === 'dark' ? 'black.500' : 'white.500'}\n          p={5}>\n          Submit\n        </Button>\n      </Stack>\n    </Flex>\n  );\n};\n\nexport default Report;\n","import {\n  ColorModeProvider,\n  CSSReset,\n  theme,\n  ThemeProvider,\n} from '@chakra-ui/core';\nimport React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Navbar from './components/navbar';\nimport Home from './pages/home';\nimport NotFound from './pages/notFound';\nimport Privacy from './pages/privacy';\nimport Report from './pages/report';\n\nconst customTheme = {\n  ...theme,\n  fonts: {\n    body: 'Roboto, sans-serif',\n    heading: 'Roboto, serif',\n    mono: 'Roboto, monospace',\n  },\n  colors: {\n    ...theme.colors,\n    black: {\n      100: '#F2EFF3',\n      200: '#E5E0E7',\n      300: '#B6B1BA',\n      400: '#716D75',\n      500: '#181719',\n      600: '#121015',\n      700: '#0E0B12',\n      800: '#09070E',\n      900: '#06040C',\n    },\n    white: {\n      100: '#FEFDFE',\n      200: '#FDFCFE',\n      300: '#FBF9FC',\n      400: '#F8F6FA',\n      500: '#f4f2f7',\n      600: '#BDB0D4',\n      700: '#8B79B1',\n      800: '#5F4D8F',\n      900: '#3F2E76',\n    },\n    brand: {\n      100: '#DBFCF9',\n      200: '#B7FAF8',\n      300: '#90ECF1',\n      400: '#71D4E3',\n      500: '#46b5d1',\n      600: '#3390B3',\n      700: '#236E96',\n      800: '#164F79',\n      900: '#0D3964',\n    },\n  },\n};\n\nfunction App() {\n  return (\n    <ThemeProvider theme={customTheme}>\n      <CSSReset />\n      <ColorModeProvider>\n        <Router>\n          <Navbar />\n          <Switch>\n            <Route path={'/report'}>\n              <Report />\n            </Route>\n            <Route path={'/privacy'}>\n              <Privacy />\n            </Route>\n            <Route exact path={'/'}>\n              <Home />\n            </Route>\n            <Route path={'*'}>\n              <NotFound />\n            </Route>\n          </Switch>\n        </Router>\n      </ColorModeProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'fontsource-roboto';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}